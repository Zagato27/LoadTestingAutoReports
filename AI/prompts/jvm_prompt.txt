ЗАДАЧА: Исчерпывающий отчет по всем JVM-метрикам  в ходе ступенчатого нагрузочного тестирования

ИСХОДНЫЕ ДАННЫЕ:
- Полные данные по использованию памяти (heap/nonheap)
- Полные данные по сборке мусора (gc_pause_seconds, action, cause)
- Полные данные по CPU usage (процесс, instance)
- Полные данные по потокам (live, daemon, peak)
- Полные данные по загруженным классам
- Все другие доступные JVM-метрики

РЕКОМЕНДУЕМЫЕ SLA (по мировой практике):
- Использование Heap памяти:
  * Нормальное: < 75% от выделенного максимума
  * Предупреждение: 75-85% от выделенного максимума
  * Критическое: > 85% от выделенного максимума
- Сборка мусора (GC):
  * Нормальное: < 5% времени CPU тратится на GC
  * Предупреждение: 5-10% времени CPU тратится на GC
  * Критическое: > 10% времени CPU тратится на GC
- Паузы GC:
  * Нормальное: < 200 мс
  * Предупреждение: 200-500 мс
  * Критическое: > 500 мс
- Использование CPU:
  * Нормальное: < 70% от доступного
  * Предупреждение: 70-85% от доступного
  * Критическое: > 85% от доступного
- Metaspace:
  * Рекомендуемый лимит: 1GB для обеспечения стабильности

ТРЕБОВАНИЯ К АНАЛИЗУ:
1. Проанализировать КАЖДУЮ метрику из таблиц данных без исключения
2. По каждой метрике предоставить:
   - Минимальное, максимальное и среднее значение
   - Временные интервалы значимых изменений
   - Сравнение между различными экземплярами/процессами
   - Соответствие рекомендуемым SLA

3. По блокам метрик представить:
   - Использование памяти: полный анализ heap и non-heap 
   - Сборка мусора: все паузы GC с указанием причин и действий
   - CPU: полное использование по всем процессам
   - Потоки: полный анализ всех типов потоков
   - Классы: детальный анализ динамики загрузки

СТРУКТУРА ОТВЕТА:
1. Использование памяти
   • Исчерпывающий анализ всех метрик heap и non-heap
   • Все зафиксированные значения, включая минимумы и максимумы
   • Полная разбивка по process и instance
   • Сравнение с целевыми значениями SLA

2. Сборка мусора (GC)
   • Анализ всех метрик, связанных с GC
   • Полное перечисление причин и действий GC
   • Все данные по частоте и продолжительности
   • Соответствие целевым SLA по паузам и времени, затрачиваемому на GC

3. CPU и потоки
   • Детальный анализ всех CPU-метрик по каждому процессу
   • Полный анализ всех типов потоков
   • Исчерпывающее описание взаимосвязей между метриками
   • Сравнение с целевыми значениями SLA

4. Загруженные классы
   • Полный анализ динамики загрузки классов
   • Все значения и изменения для каждого процесса

5. Итоговые выводы
   • Обобщение по всем проанализированным метрикам
   • Выявление всех закономерностей и аномалий
   • Конкретные рекомендации на основе всех данных
   • Общая оценка соответствия SLA и рекомендации по оптимизации

ВАЖНО:
1. НЕ ПРИДУМЫВАТЬ ДАННЫХ. Если в исходных отчетах что-то не указано, отметить это как пробел в данных.
2. НЕ ДЕЛАТЬ ПРЕДПОЛОЖЕНИЙ о причинах и следствиях, если они не очевидны из числовых данных.
3. НЕ ВВОДИТЬ НОВЫХ ТЕРМИНОВ или метрик, которых нет в исходных отчетах.
4. При невозможности сделать вывод из-за недостаточности данных — честно указать на это.
5. Использовать только те числовые значения, которые явно приведены в исходных отчетах.
6. Включите в анализ абсолютно все значения из таблиц. Не опускайте данные, даже если они кажутся незначительными.