
ЗАДАЧА: Всесторонний аналитический отчет по результатам ступенчатого нагрузочного тестирования

ВХОДНЫЕ ДАННЫЕ (ответьте на русском языке):
- Готовый аналитический отчет по JVM-метрикам
{answer_jvm}
- Готовый аналитический отчет по Database
{answer_database}
- Готовый аналитический отчет по Kafka
{answer_kafka}
- Готовый аналитический отчет по микросервисам
{answer_microservices}

ОБЩИЕ РЕКОМЕНДАЦИИ ПО SLA (по мировой практике):
1. JVM-метрики:
   - Использование Heap: < 75% от максимума
   - Время на GC: < 5% CPU времени
   - Паузы GC: < 200 мс
   - Использование CPU: < 70%

2. Database-метрики:
   - Время выполнения запросов: P95 < 100 мс
   - Доступность: 99.9%
   - Производительность: Apdex ≥ 0.85

3. Kafka-метрики:
   - Задержка: < 10 мс
   - Lag консьюмерских групп: < 1000 сообщений
   - Доступность: 99.95%

4. Микросервисы:
   - Время отклика: P95 < 200 мс
   - Apdex: ≥ 0.85
   - Частота ошибок: < 0.1%
   - Доступность: 99.9%

5. Общесистемные показатели:
   - Целевое время отклика для E2E транзакций: P95 < 500 мс
   - Целевая доступность системы: 99.9%
   - Максимальное время восстановления после сбоя: < 5 минут

ТРЕБОВАНИЯ К АНАЛИЗУ:
1. Синтезировать целостный отчет на основе готовых аналитических результатов:
   - Извлечь и обобщить ключевые метрики из каждого отчета
   - Сопоставить одинаковые временные интервалы между разными компонентами
   - Определить общесистемные тенденции и закономерности
   - Оценить соответствие всей системы рекомендуемым SLA

2. Произвести комплексный кросс-компонентный анализ:
   - Выявить причинно-следственные связи между компонентами
   - Определить, как проблемы в одном компоненте влияют на другие
   - Найти общие точки отказа и критические зависимости
   - Выделить каскадные эффекты при деградации отдельных компонентов

3. Выявить и описать:
   - Системные узкие места на основе имеющихся данных
   - Межкомпонентные взаимодействия, влияющие на производительность
   - Приоритетные направления оптимизации системы в целом
   - Максимальную достигнутую производительность системы (если указана в отчете микросервисов как peak_performance)

ТРЕБОВАНИЯ К НАСЫЩЕННОСТИ И ФОРМАТУ:
- Минимум 5 пунктов в findings и 5 в recommended_actions (если достаточно данных).
- Для каждого findings укажите: severity (critical/high/medium/low), component, evidence (факт: метрика/окно времени/значение) c интервалом start–end и peak_time.
- СФОРМИРУЙТЕ два выхода:
  1) Строгий JSON: {verdict, confidence, findings[], recommended_actions[], affected_components[], peak_performance?}.
  2) Краткий Markdown‑резюме (3–6 пунктов) для публикации (русский язык).
- Если данных недостаточно — верните verdict="insufficient_data" и объясните причину в findings.

СТРУКТУРА НАРРАТИВА (для внутренней логики, но ответ — JSON):
1. Итоговый обзор нагрузки
   • Обобщение общесистемной нагрузки на основе данных по всем компонентам
   • Согласованная картина изменений нагрузки в течение теста
   • Выявление и анализ системных пиков нагрузки
   • Общая оценка соответствия SLA на уровне всей системы

2. Кросс-компонентный анализ
   • JVM-метрики и их влияние на другие компоненты
   • Database-метрики и их взаимосвязь с общей производительностью
   • Kafka-метрики и их роль в общей картине нагрузки
   • Микросервисы и их взаимодействие с другими компонентами

3. Анализ каскадных эффектов и взаимозависимостей
   • Цепочки зависимостей, обнаруженные при анализе отчетов
   • Совпадающие по времени события в разных компонентах
   • Распространение деградации производительности между компонентами

4. Оценка масштабируемости и устойчивости
   • Прогноз поведения системы при увеличении нагрузки
   • Компоненты, ограничивающие масштабируемость
   • Резервы производительности в различных компонентах

5. Соответствие SLA
   • Сравнение фактических показателей с рекомендуемыми SLA
   • Компоненты, не соответствующие рекомендуемым SLA
   • Влияние отклонений на общесистемную производительность
   • Укажите максимальную достигнутую производительность (если доступно), как max_rps и момент времени, метод расчета: max_step_before_drop

6. Заключение и рекомендации
   • Приоритизированный список системных узких мест
   • Рекомендации по оптимизации с учетом взаимозависимостей
   • Предложения по улучшению общесистемного мониторинга
   • Итоговая оценка соответствия системы рекомендуемым SLA

ВАЖНО:
1. Сосредоточьтесь на связях и взаимодействиях между компонентами
2. Выделяйте временные корреляции между разными компонентами
3. Особое внимание уделите сквозной производительности
4. Приоритизируйте рекомендации на основе системного воздействия, а не локальных улучшений
5. Обязательно сравнивайте фактические показатели с рекомендуемыми SLA
6. НЕ ПРИДУМЫВАТЬ ДАННЫХ. Если в исходных отчетах что-то не указано, отметить это как пробел в данных.
7. НЕ ДЕЛАТЬ ПРЕДПОЛОЖЕНИЙ о причинах и следствиях, если они не очевидны из числовых данных.
8. НЕ ВВОДИТЬ НОВЫХ ТЕРМИНОВ или метрик, которых нет в исходных отчетах.
9. При невозможности сделать вывод из-за недостаточности данных — честно указать на это.
10. Использовать только те числовые значения, которые явно приведены в исходных отчетах.
