#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ metrics_config.py (Python) –≤ JavaScript —Ñ–æ—Ä–º–∞—Ç –¥–ª—è n8n workflow
"""

import json
from metrics_config import METRICS_CONFIG

def convert_to_js():
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç Python –∫–æ–Ω—Ñ–∏–≥ –≤ JavaScript —Ñ–æ—Ä–º–∞—Ç"""
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ñ–∏–≥ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π
    js_config = {}
    
    for service_name, service_data in METRICS_CONFIG.items():
        js_config[service_name] = {
            "confluence_url": "https://confluence.test.ru",  # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à URL
            "page_sample_id": service_data.get("page_sample_id", ""),
            "page_parent_id": service_data.get("page_parent_id", ""),
            "grafana_base_url": "http://0.0.0.0:3000",  # –£–∫–∞–∂–∏—Ç–µ –≤–∞—à Grafana URL
            "space_conf": "DPSUPP",  # Confluence space (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
            "metrics": service_data.get("metrics", [])
        }
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ JSON
    js_code = json.dumps(js_config, indent=2, ensure_ascii=False)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–¥ –¥–ª—è n8n
    full_code = f"""const service = $input.first().json.service;

const METRICS_CONFIG = {js_code};

const config = METRICS_CONFIG[service];
if (!config) {{
  throw new Error(`Service ${{service}} not found in config`);
}}

return {{ json: config }};"""
    
    return full_code

def count_metrics():
    """–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Ç—Ä–∏–∫"""
    total = 0
    for service_name, service_data in METRICS_CONFIG.items():
        metrics = service_data.get("metrics", [])
        print(f"\n{service_name}: {len(metrics)} –º–µ—Ç—Ä–∏–∫")
        total += len(metrics)
    return total

if __name__ == "__main__":
    print("=" * 60)
    print("–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è metrics_config.py ‚Üí JavaScript –¥–ª—è n8n")
    print("=" * 60)
    
    # –ü–æ–¥—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫
    total_metrics = count_metrics()
    print(f"\n–í—Å–µ–≥–æ –º–µ—Ç—Ä–∏–∫: {total_metrics}")
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
    print("\n" + "=" * 60)
    print("–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π JavaScript –∫–æ–¥:")
    print("=" * 60)
    
    js_code = convert_to_js()
    print(js_code)
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    output_file = "n8n_metrics_config.js"
    with open(output_file, "w", encoding="utf-8") as f:
        f.write(js_code)
    
    print("\n" + "=" * 60)
    print(f"‚úÖ –ö–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: {output_file}")
    print("=" * 60)
    
    print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ n8n: http://localhost:5678")
    print("2. –û—Ç–∫—Ä–æ–π—Ç–µ workflow")
    print("3. –ù–∞–π–¥–∏—Ç–µ —É–∑–µ–ª 'Get Service Config'")
    print(f"4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ {output_file}")
    print("5. –í—Å—Ç–∞–≤—å—Ç–µ –≤ –ø–æ–ª–µ JavaScript –∫–æ–¥–∞")
    print("6. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ workflow")
    
    print("\n‚ö†Ô∏è  –ù–µ –∑–∞–±—É–¥—å—Ç–µ:")
    print("‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å confluence_url –Ω–∞ –≤–∞—à URL")
    print("‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç—å grafana_base_url –Ω–∞ –≤–∞—à Grafana URL")
    print("‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å page_sample_id –∏ page_parent_id")

